package com.hj.app.mobile.merchant.shop.service.imp;

import java.util.HashMap;
import java.util.Map;

import com.hj.app.mobile.merchant.shop.model.ShopModel;
import com.hj.app.mobile.merchant.shop.po.ShopPo;
import com.hj.app.mobile.merchant.shop.service.IShopService;
import com.hj.app.model.ResultData;
import com.hj.app.utils.DateUtil;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

public class ShopService implements IShopService {

	@Override
	public ResultData saveOrUpdateShopMsg(ShopPo shopPo) {  //添加店铺基本信息
		// TODO Auto-generated method stub
		
		ResultData result = new ResultData();
		
		if( null == shopPo.getId() || 0 == shopPo.getId().length()){
			result.setCode(-1);
			result.setMsg("参数错误！");
			return result;
		}
		
		Record shopInfo = Db.findFirst("select * from shop a where a.id = '"+shopPo.getId()+"'");  //校验是否存在重复信息
		
		if( null != shopInfo ){
			return updateShopHandle(result,shopPo);
		}
		
		
		return saveShopHandle(result,shopPo);
	}
	
	private ResultData saveShopHandle(ResultData result,ShopPo shopPo){  //保存店铺基本信息
		
        ShopModel shopModel = ShopModel.dao;
		
		shopModel.set("id", shopPo.getId());
		shopModel.set("shopnum", DateUtil.dateStr());
		shopModel.set("shop_img", shopPo.getShop_img());
		shopModel.set("shop_name", shopPo.getShop_name());
		shopModel.set("contact_name", shopPo.getContact_name());
		shopModel.set("contact_tel", shopPo.getContact_tel());
		shopModel.set("shop_addr", shopPo.getShop_addr());
		shopModel.set("variety", shopPo.getVariety());
		shopModel.set("shop_introduce", shopPo.getShop_introduce());
		shopModel.set("license", shopPo.getLicense());
		shopModel.set("goods_ids", shopPo.getGoods_ids());
		shopModel.set("views", 0);
		shopModel.set("collects", 0);
		shopModel.set("addDate", DateUtil.getTimeStamp());
		
		try {
			if(shopModel.save()){
				result.setCode(0);
				result.setMsg("请求成功！");
				return result;
			}
			result.setCode(-1);
			result.setMsg("请求失败！");
			return result;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			result.setCode(-1);
			result.setMsg("数据异常！");
			return result;
		}
		
	}
	
    private ResultData updateShopHandle(ResultData result,ShopPo shopPo){  //编辑店铺基本信息
		
        ShopModel shopModel = ShopModel.dao.findFirst("select * from shop a where a.id='"+shopPo.getId()+"'");
		
		shopModel.set("shop_img", shopPo.getShop_img());
		shopModel.set("shop_name", shopPo.getShop_name());
		shopModel.set("contact_name", shopPo.getContact_name());
		shopModel.set("contact_tel", shopPo.getContact_tel());
		shopModel.set("shop_addr", shopPo.getShop_addr());
		shopModel.set("variety", shopPo.getVariety());
		shopModel.set("shop_introduce", shopPo.getShop_introduce());
		shopModel.set("license", shopPo.getLicense());
		shopModel.set("goods_ids", shopPo.getGoods_ids());
		
		try {
			if(shopModel.update()){
				result.setCode(0);
				result.setMsg("请求成功！");
				return result;
			}
			result.setCode(-1);
			result.setMsg("请求失败！");
			return result;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			result.setCode(-1);
			result.setMsg("数据异常！");
			return result;
		}
		
	}

	@Override
	public ResultData queryShopInfo(String openId) {
		// TODO Auto-generated method stub
		
		ResultData result = new ResultData();
		
		if( null == openId || 0 == openId.length()){
			result.setCode(-1);
			result.setMsg("参数错误！");
			return result;
		}
		
		Record shopInfo = Db.findFirst("select a.shop_img,a.shop_name,a.contact_name,a.contact_tel,a.shop_addr,a.variety,a.shop_introduce"
				+ ",a.license from shop a where a.id = '"+openId+"'");
		if( null == shopInfo ){
			result.setCode(-1);
			result.setMsg("信息找不到！");
			return result;
		}
		
		Map<String,Object> info = new HashMap<String,Object>();
		
		info.put("shopInfo", shopInfo);
		info.put("produces", Db.find("select * from produce a where a.openid='"+openId+"'"));
		
		result.setCode(0);
		result.setMsg("查询成功！");
		result.setResultData(info);
		return result;
	}
	

}
